image: "python:3.7"

# before_script:
#   - python --version
#   - pip install -r requirements.txt
#   - pip install -r requirements_testing.txt

stages:
  - Static Analysis
  - Unit Testing

markdown-analysis:
  image: "ruby:latest"
  stage: Static Analysis
  allow_failure: true
  script:
  - gem install mdl
  - mdl ./
#  only:
#    changes:
#      - "**/*.md"

# mypy:
#   stage: Static Analysis
#   script:
#   - pwd
#   - ls -l
#   - python -m mypy plugins/rds_hooks.py

python-analysis:
  stage: Static Analysis
  allow_failure: true
  script:
  - python --version
  - pip install -r requirements.txt
  - pip install flake8 pylint
  - flake8 *.py
  - pylint *.py
#  only:
#    changes:
#      - *.py
#      - test/*.py

python-testing:
  stage: Unit Testing
  script:
  - python --version
  - pip install -r requirements.txt
  - pip install pytest pytest-cov
  - pwd
  - ls -l
  - export PYTHONPATH="$PYTHONPATH:."
  - python -c "import sys;print(sys.path)"
  - pytest -v --cov-branch --cov=openpost
#  - python -m pytest -v
#  only:
#    changes:
#      - *.py
#      - test/*




# #stages:
# #    - test
# #
# #test:
# #    stage: test
# #    script:
# #        - echo "Setting up test environment"
# #        - apt-get update
# #        - apt-get -y upgrade
# #        - apt-get -y dist-upgrade
# #        - ls -l /usr/bin
# #        - python3 -V
# #        - python3 -m venv .venv
# #        - source .venv/bin/activate
# #        - python3 -m pip install --upgrade pip
# #        - pip3 install -r requirements.txt
# #        - echo "Linting Python script files"
# #        - python -m pylint /plugins/rds_hooks.py
# #        - deactivate


# # Official language image. Look for the different tagged releases at:
# # https://hub.docker.com/r/library/python/tags/
# # image: python:latest
# image: "python:3.7"

# # Change pip's cache directory to be inside the project directory since we can
# # only cache local items.
# variables:
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# # Pip's cache doesn't store the python packages
# # https://pip.pypa.io/en/stable/reference/pip_install/#caching
# #
# # If you want to also cache the installed packages, you have to install
# # them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - venv/

# before_script:
#   - python -V  # Print out python version for debugging
#   - pip install virtualenv
#   - virtualenv venv
#   - source venv/bin/activate
#   - pip install pylint
#   - pip install pycodestyle

# test:
#   script:
#     - pwd
#     - echo "Linting Python script files"
#     - pycodestyle plugins/rds_hooks.py
# #    - python -m pylint plugins/rds_hooks.py
# #    - python setup.py test
# #    - pip install tox flake8  # you can also use tox
# #    - tox -e py36,flake8
# #
# #run:
# #  script:
# #    - python setup.py bdist_wheel
# #    # an alternative approach is to install and run:
# #    - pip install dist/*
# #    # run the command here
# #  artifacts:
# #    paths:
# #      - dist/*.whl
# #
# #pages:
# #  script:
# #    - pip install sphinx sphinx-rtd-theme
# #    - cd doc ; make html
# #    - mv build/html/ ../public/
# #  artifacts:
# #    paths:
# #      - public
# #  only:
# #    - master
